#---

#apiVersion: v1
  #kind: Secret
  #metadata:
  #  name: mongodb-secret
    #type: Opaque
  #data:
  #  MONGO_INITDB_ROOT_USERNAME: 
    #  MONGO_INITDB_ROOT_PASSWORD: <base64 encoded password>

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: my-pv
spec:
  capacity:
    storage: 5Gi
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: /mnt/data/mongodb
  storageClassName: local-storage

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: my-pvc
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-deployment
  labels:
    app: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongo
        image: mongo:latest
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: "root"
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: "example"
        volumeMounts:
        - name: mongodb-persistent-storage
          mountPath: /data/db
      volumes:
      - name:  mongodb-persistent-storage
        persistentVolumeClaim:
          claimName: my-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-express-deployment
  labels:
    app: mongo-express
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo-express
  template:
    metadata:
      labels:
        app: mongo-express
    spec:
      containers:
      - name: mongo-express
        image: mongo-express:latest
        ports:
        - containerPort: 8081
        env:
        - name: ME_CONFIG_MONGODB_ADMINUSERNAME
          value: "root"
        - name: ME_CONFIG_MONGODB_ADMINPASSWORD
          value: "example"
        - name: ME_CONFIG_MONGODB_URL
          value: "mongodb://root:example@mongodb:27017/"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  labels:
    app: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        imagePullPolicy: IfNotPresent
        image: subham328/wanderlust-backend-image
        ports:
        - containerPort: 5000
        env:
        - name: MONGODB_URI
          value: "mongodb://root:example@mongodb:27017/wanderlust"
            #---
            #apiVersion: networking.k8s.io/v1
            #kind: Ingress
            #metadata:
            #  name: backend-ingress
            #spec:
            #  rules:
            #  - host: backend.example.com
            #    http:
            #      paths:
            #      - path: /api
            #        backend:
            #          serviceName: backend
            #          servicePort: 5000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
  labels:
    app: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        imagePullPolicy: IfNotPresent
        image: frontend-image
        ports:
        - containerPort: 5173
        env:
        - name: VITE_API_PATH
          value: "http://backend:5000"

---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
spec:
  type: ClusterIP
  ports:
  - port: 27017
    targetPort: 27017
  selector:
    app: mongodb
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-express
spec:
  type: ClusterIP
  ports:
  - port: 8081
    targetPort: 8081
  selector:
    app: mongo-express
---
apiVersion: v1
kind: Service
metadata:
  name: backend
spec:
  type: ClusterIP
  ports:
  - port: 5000
    targetPort: 5000
  selector:
    app: backend

---
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  type: NodePort
  ports:
  - port: 5173
    targetPort: 5173
    nodePort: 30007
  selector:
    app: frontend
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontend-ingress
spec:
  rules:
  - host: frontend.example.com
    http:
      paths:
      - pathType: Prefix
        path: /home
        backend:
          service:
            name: frontend
            port:
              number: 5173
      - pathType: Prefix
        path: /
        backend:
          service:
            name: backend
            port:
              number: 5000

